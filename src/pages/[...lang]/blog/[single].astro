---
import CallToAction from "@/components/sections/CallToAction.astro";
import Base from "@/layouts/Base.astro";
import parseTomlToJson from "@/lib/utils/parseTomlToJson";
import { useTranslations } from "@/lib/utils/languageParser.ts";
import { fetchBlogBySlug } from "@/lib/payload";
import SinglePageLayout from "@/components/SinglePageLayout.astro";
import { markdownify } from "@/lib/utils/textConverter";

export const prerender = false;

const { single } = Astro.params;
const locale = Astro.currentLocale || 'es';
const blog = await fetchBlogBySlug(single!, locale);

const config = parseTomlToJson("@/config/config.toml");
const { table_of_contents } = config.settings.markup;
const translations = await useTranslations(locale);

let contentHtml = blog?.content ? markdownify(blog.content, true) : '';

const authorEntry = blog?.author ? { title: blog.author } : undefined;
let tocHeadings = [];
---

<Base {...(blog || {})}>
  <SinglePageLayout
    layout={"modern"}
    translations={translations}
    content={{
      ...blog,
      table_of_contents,
      tocHeadings,
      author: authorEntry,
      Content: contentHtml,
    }}
  />
  <CallToAction />
</Base>
