---
import Base from "@/layouts/Base.astro";
import SinglePageLayout from "@/components/SinglePageLayout.astro";
import CallToAction from "@/components/sections/CallToAction.astro";
import { fetchAllBlogs } from "@/lib/payload";
import { supportedLanguages, useTranslations } from "@/lib/utils/languageParser.ts";
import parseTomlToJson from "@/lib/utils/parseTomlToJson";
import { markdownify } from "@/lib/utils/textConverter";

export async function getStaticPaths() {
  const config = parseTomlToJson("./src/config/config.toml");
  const { default_language, show_default_lang_in_url } = config.settings.multilingual;

  const paths = await Promise.all(
    supportedLanguages.map(async (lang) => {
      const res = await fetchAllBlogs(lang.languageCode);
      const posts = res?.docs || [];
      return posts.map((post: any) => ({
        params: {
          lang:
            lang.languageCode === default_language && !show_default_lang_in_url
              ? undefined
              : lang.languageCode,
          slug: post.slug,
        },
        props: { post },
      }));
    })
  );

  return paths.flat();
}

const { post } = Astro.props;
const translations = await useTranslations(Astro.currentLocale as string);
const contentHtml = markdownify(post?.content, true) as string;
---
<Base {...post}>
  <SinglePageLayout
    layout="modern"
    translations={translations}
    content={{ ...post, Content: contentHtml }}
  />
  <CallToAction />
</Base>
