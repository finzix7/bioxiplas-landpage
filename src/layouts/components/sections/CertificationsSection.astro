---
import { fetchCertifications } from "@/lib/payload";
import Subtitle from "../widgets/Subtitle.astro";
import Pagination from "../widgets/Pagination.astro";
import CertificationCard from "../cards/CertificationCard.astro";
import parseTomlToJson from "@/lib/utils/parseTomlToJson";

interface Props {
  pagination: {
    enable: boolean;
    currentPage: number;
  };
}

const config = parseTomlToJson("./src/config/config.toml");
const limit = config.settings.pagination || 12;
const currentPage = Astro.props.pagination?.currentPage || 1;

const certRes = await fetchCertifications({
  page: currentPage,
  limit,
  locale: Astro.currentLocale,
});

const certifications = certRes?.docs || [];
const totalPages = certRes?.totalPages || 1;
---

<section class="relative overflow-hidden">
  <div class="container">
    <div class="mx-auto max-w-2xl text-center" data-aos="fade-up-sm">
      <Subtitle content={{ enable: true, content: '' }} />
      <h2 class="h2 has-italic-text capitalize">Certifications</h2>
    </div>
    <div class="md:bg-primary/10 mt-12 space-y-16 rounded-lg md:mt-16 md:p-16" data-aos="fade-up-sm" data-aos-delay="200">
      <div class="grid gap-x-6 gap-y-10 md:grid-cols-2 xl:grid-cols-3">
        {certifications.map((item: any, index: number) => (
          <CertificationCard
            certification={item}
            data-aos="fade-up-sm"
            data-aos-delay={((index % 3) + 1) * 100}
          />
        ))}
      </div>
      <Pagination
        collection="certifications"
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </div>
</section>

